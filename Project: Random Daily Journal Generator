Here's a fun **beginner project** that uses multiple built-in modules from the Top 30 list:

---

# 🎁 **Project: Random Daily Journal Generator**

### 🧠 Goal:

Create a script that:

1. Greets the user
2. Shows today’s date
3. Asks the user to write how they feel
4. Picks a **random motivational quote**
5. Saves the entry into a `.json` file with the date
6. Waits 2 seconds before saying goodbye

---

## 🧰 Built-in Modules Used:

| Module     | Why it's used                        |
| ---------- | ------------------------------------ |
| `datetime` | Get today’s date                     |
| `random`   | Pick a random motivational quote     |
| `time`     | Wait 2 seconds before ending         |
| `json`     | Save journal entry as a file         |
| `os`       | Make sure a folder exists for saving |

---

## 💻 Code Example

```python
import datetime
import random
import time
import json
import os

# 1. Say hello
print("👋 Welcome to your Daily Journal!")

# 2. Show today’s date
today = datetime.date.today()
print(f"📅 Today is: {today}")

# 3. Ask for user’s feeling
mood = input("💬 How are you feeling today? ")

# 4. Pick a random motivational quote
quotes = [
    "You’re doing great, keep going! 💪",
    "Every day is a new chance to grow 🌱",
    "Believe in yourself 🌟",
    "Progress, not perfection 🚶",
    "You’ve got this! 🎯"
]
quote = random.choice(quotes)
print(f"\n🧠 Quote of the day:\n\"{quote}\"")

# 5. Save journal entry
entry = {
    "date": str(today),
    "mood": mood,
    "quote": quote
}

# Create folder if not exists
os.makedirs("journal_entries", exist_ok=True)

# Save to JSON file
filename = f"journal_entries/{today}.json"
with open(filename, "w") as file:
    json.dump(entry, file, indent=2)

print("\n📓 Your journal entry was saved!")

# 6. Wait before exit
time.sleep(2)
print("👋 Goodbye! See you tomorrow.")
```

---

## 🧪 Try It Out

1. Copy the code into a file called `journal.py`
2. Run it in your terminal:

   ```bash
   python journal.py
   ```
3. Check the folder `journal_entries` — your journal is saved!

---

